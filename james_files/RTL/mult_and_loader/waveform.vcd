$date
	Sun Apr 14 11:54:19 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_loader_tb $end
$var reg 1 ! CLK $end
$var reg 1 " ctrl_logic $end
$var reg 4 # data_send [3:0] $end
$var integer 32 $ count [31:0] $end
$scope module loader $end
$var wire 1 ! CLK $end
$var wire 1 " ctrl_logic $end
$var wire 4 % data [3:0] $end
$var wire 4 & data_out [3:0] $end
$var parameter 32 ' X_DIM $end
$var parameter 32 ( Y_DIM $end
$var reg 4 ) C1 [3:0] $end
$var reg 4 * C2 [3:0] $end
$var reg 4 + R1 [3:0] $end
$var reg 4 , R2 [3:0] $end
$var reg 1 - readybit $end
$var integer 32 . count [31:0] $end
$var integer 32 / x [31:0] $end
$var integer 32 0 y [31:0] $end
$scope module data_flop $end
$var wire 1 ! CLK $end
$var wire 4 1 a [3:0] $end
$var reg 4 2 x [3:0] $end
$upscope $end
$scope module mult $end
$var wire 4 3 C1 [3:0] $end
$var wire 4 4 C2 [3:0] $end
$var wire 1 ! CLK $end
$var wire 4 5 R1 [3:0] $end
$var wire 4 6 R2 [3:0] $end
$var wire 1 - readybit $end
$var parameter 32 7 X_DIM $end
$var parameter 32 8 Y_DIM $end
$var integer 32 9 i [31:0] $end
$var integer 32 : index [31:0] $end
$var integer 32 ; j [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 < i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 = j [31:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 > k [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 8
b10 7
b10 (
b10 '
$end
#0
$dumpvars
b0 >
b0 =
b0 <
bx ;
bx :
bx 9
bx 6
bx 5
bx 4
bx 3
bx 2
b10 1
b0 0
b0 /
b0 .
0-
bx ,
bx +
bx *
bx )
bx &
b10 %
b0 $
b10 #
1"
0!
$end
#500
b10 &
b10 2
b1 .
b1 $
1!
#1000
0!
#1500
b10 +
b10 5
b10 $
b10 .
1!
#2000
0!
#2500
b10 )
b10 3
b11 .
b11 $
1!
#3000
0!
#3500
b1000 #
b1000 %
b1000 1
b10 ,
b10 6
b100 $
b100 .
1!
#4000
0!
#4500
b1000 &
b1000 2
b10 *
b10 4
0"
b1 #
b1 %
b1 1
b101 .
b101 $
1!
#5000
0!
#5500
b1111 #
b1111 %
b1111 1
b1 &
b1 2
b110 $
b1 /
1!
#6000
0!
#6500
b1111 &
b1111 2
b10 #
b10 %
b10 1
b10 /
b111 $
1!
#7000
0!
#7500
b10 &
b10 2
b1000 $
b11 /
1!
#8000
0!
#8500
b1 #
b1 %
b1 1
b100 /
b1001 $
1!
#9000
0!
#9500
b1001 #
b1001 %
b1001 1
b1 &
b1 2
b1010 $
b1 0
1!
#10000
0!
#10500
b1001 &
b1001 2
b10 #
b10 %
b10 1
b10 0
b1011 $
1!
#11000
0!
#11500
b10 &
b10 2
b1100 $
b11 0
1!
#12000
0!
#12500
b10 <
b10 =
b10 >
b10 ;
b10 9
b100 :
1-
b100 0
b1101 $
1!
